model User {
	id            String   @id @default(cuid(2))
	name          String
	email         String   @unique
	emailVerified Boolean  @default(false)
	image         String?
	createdAt     DateTime @default(now())
	updatedAt     DateTime @updatedAt

	sessions Session[]
	accounts Account[]

	@@map("auth_users")
	@@schema("auth")
}

model Session {
	id        String   @id @default(cuid(2))
	userId    String
	token     String   @unique
	expiresAt DateTime
	ipAddress String
	userAgent String
	createdAt DateTime @default(now())
	updatedAt DateTime @updatedAt

	user User @relation(references: [id], fields: [userId], onDelete: Cascade)

	@@map("auth_sessions")
	@@schema("auth")
}

model Account {
	id                    String    @id @default(cuid(2))
	userId                String
	providerId            String
	accountId             String
	refreshToken          String?
	accessToken           String?
	accessTokenExpiresAt  DateTime?
	refreshTokenExpiresAt DateTime?
	scope                 String?
	idToken               String?
	password              String?
	createdAt             DateTime  @default(now())
	updatedAt             DateTime  @updatedAt

	user User @relation(fields: [userId], references: [id], onDelete: Cascade)

	@@map("auth_accounts")
	@@schema("auth")
}

model Verification {
	id         String   @id @default(cuid(2))
	identifier String
	value      String
	expiresAt  DateTime
	createdAt  DateTime @default(now())
	updatedAt  DateTime @updatedAt

	@@map("auth_verifications")
	@@schema("auth")
}
