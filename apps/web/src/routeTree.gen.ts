/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as WordleIndexImport } from './routes/wordle.index'
import { Route as LiteratureIndexImport } from './routes/literature.index'
import { Route as WordleGameIdImport } from './routes/wordle.$gameId'
import { Route as LiteratureGameIdImport } from './routes/literature.$gameId'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const WordleIndexRoute = WordleIndexImport.update({
  path: '/wordle/',
  getParentRoute: () => rootRoute,
} as any)

const LiteratureIndexRoute = LiteratureIndexImport.update({
  path: '/literature/',
  getParentRoute: () => rootRoute,
} as any)

const WordleGameIdRoute = WordleGameIdImport.update({
  path: '/wordle/$gameId',
  getParentRoute: () => rootRoute,
} as any)

const LiteratureGameIdRoute = LiteratureGameIdImport.update({
  path: '/literature/$gameId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/literature/$gameId': {
      id: '/literature/$gameId'
      path: '/literature/$gameId'
      fullPath: '/literature/$gameId'
      preLoaderRoute: typeof LiteratureGameIdImport
      parentRoute: typeof rootRoute
    }
    '/wordle/$gameId': {
      id: '/wordle/$gameId'
      path: '/wordle/$gameId'
      fullPath: '/wordle/$gameId'
      preLoaderRoute: typeof WordleGameIdImport
      parentRoute: typeof rootRoute
    }
    '/literature/': {
      id: '/literature/'
      path: '/literature'
      fullPath: '/literature'
      preLoaderRoute: typeof LiteratureIndexImport
      parentRoute: typeof rootRoute
    }
    '/wordle/': {
      id: '/wordle/'
      path: '/wordle'
      fullPath: '/wordle'
      preLoaderRoute: typeof WordleIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/literature/$gameId': typeof LiteratureGameIdRoute
  '/wordle/$gameId': typeof WordleGameIdRoute
  '/literature': typeof LiteratureIndexRoute
  '/wordle': typeof WordleIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/literature/$gameId': typeof LiteratureGameIdRoute
  '/wordle/$gameId': typeof WordleGameIdRoute
  '/literature': typeof LiteratureIndexRoute
  '/wordle': typeof WordleIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/literature/$gameId': typeof LiteratureGameIdRoute
  '/wordle/$gameId': typeof WordleGameIdRoute
  '/literature/': typeof LiteratureIndexRoute
  '/wordle/': typeof WordleIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/literature/$gameId'
    | '/wordle/$gameId'
    | '/literature'
    | '/wordle'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/literature/$gameId'
    | '/wordle/$gameId'
    | '/literature'
    | '/wordle'
  id:
    | '__root__'
    | '/'
    | '/literature/$gameId'
    | '/wordle/$gameId'
    | '/literature/'
    | '/wordle/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LiteratureGameIdRoute: typeof LiteratureGameIdRoute
  WordleGameIdRoute: typeof WordleGameIdRoute
  LiteratureIndexRoute: typeof LiteratureIndexRoute
  WordleIndexRoute: typeof WordleIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LiteratureGameIdRoute: LiteratureGameIdRoute,
  WordleGameIdRoute: WordleGameIdRoute,
  LiteratureIndexRoute: LiteratureIndexRoute,
  WordleIndexRoute: WordleIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/literature/$gameId",
        "/wordle/$gameId",
        "/literature/",
        "/wordle/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/literature/$gameId": {
      "filePath": "literature.$gameId.tsx"
    },
    "/wordle/$gameId": {
      "filePath": "wordle.$gameId.tsx"
    },
    "/literature/": {
      "filePath": "literature.index.tsx"
    },
    "/wordle/": {
      "filePath": "wordle.index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
