{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///external commonjs \"tslib\"","webpack:///external commonjs \"@prisma/client\"","webpack:///../../libs/auth/src/index.ts","webpack:///../../libs/auth/src/handlers/auth-callback.ts","webpack:///../../libs/utils/src/index.ts","webpack:///../../libs/utils/src/types.ts","webpack:///../../libs/utils/src/constants.ts","webpack:///external commonjs \"bcryptjs\"","webpack:///../../libs/auth/src/utils/oauth.ts","webpack:///external commonjs \"axios\"","webpack:///../../libs/auth/src/utils/token.ts","webpack:///external commonjs \"jsonwebtoken\"","webpack:///../../libs/auth/src/handlers/logout.ts","webpack:///../../libs/auth/src/handlers/logged-in-user.ts","webpack:///../../libs/auth/src/middlewares/require-user.ts","webpack:///../../libs/auth/src/middlewares/deserialize-user.ts","webpack:///../../libs/literature/router/src/index.ts","webpack:///../../libs/literature/dtos/src/index.ts","webpack:///../../libs/cards/src/index.ts","webpack:///../../libs/cards/src/card-const.ts","webpack:///../../libs/cards/src/playing-card.ts","webpack:///../../libs/cards/src/card-deck.ts","webpack:///external commonjs \"lodash\"","webpack:///../../libs/cards/src/card-hand.ts","webpack:///external commonjs \"zod\"","webpack:///external commonjs \"@trpc/server/adapters/express\"","webpack:///external commonjs \"trpc-panel\"","webpack:///../../libs/literature/router/src/resolvers/ask-card.ts","webpack:///external commonjs \"@trpc/server\"","webpack:///../../libs/literature/router/src/constants/index.ts","webpack:///../../libs/literature/router/src/resolvers/call-set.ts","webpack:///../../libs/literature/router/src/resolvers/create-game.ts","webpack:///../../libs/literature/utils/src/index.ts","webpack:///../../libs/literature/utils/src/enhanced-game.ts","webpack:///../../libs/literature/utils/src/enhanced-move.ts","webpack:///../../libs/literature/utils/src/enhanced-player.ts","webpack:///../../libs/literature/utils/src/enhanced-team.ts","webpack:///../../libs/literature/router/src/resolvers/create-teams.ts","webpack:///../../libs/literature/router/src/resolvers/decline-card.ts","webpack:///../../libs/literature/router/src/resolvers/get-game.ts","webpack:///../../libs/literature/router/src/resolvers/give-card.ts","webpack:///../../libs/literature/router/src/resolvers/join-game.ts","webpack:///../../libs/literature/router/src/resolvers/start-game.ts","webpack:///../../libs/literature/router/src/resolvers/transfer-turn.ts","webpack:///../../libs/literature/router/src/utils/index.ts","webpack:///external commonjs \"superjson\"","webpack:///../../libs/literature/router/src/middlewares/require-game.ts","webpack:///../../libs/literature/router/src/middlewares/require-game-in-progress.ts","webpack:///../../libs/literature/router/src/middlewares/require-player.ts","webpack:///external commonjs \"cookie-parser\"","webpack:///external commonjs \"cors\"","webpack:///external commonjs \"dotenv\"","webpack:///external commonjs \"express\"","webpack:///external node-commonjs \"http\"","webpack:///external commonjs \"morgan\"","webpack:///external commonjs \"socket.io\"","webpack:///webpack/bootstrap","webpack:///./src/main.ts"],"sourcesContent":["module.exports = require(\"tslib\");","module.exports = require(\"@prisma/client\");","export { default as handleAuthCallback } from \"./handlers/auth-callback\";\nexport { default as handleLogout } from \"./handlers/logout\";\nexport { default as handleGetLoggedInUser } from \"./handlers/logged-in-user\";\nexport { default as requireUser } from \"./middlewares/require-user\";\nexport { default as deserializeUser } from \"./middlewares/deserialize-user\";","import type { PrismaClient } from \"@prisma/client\";\nimport { AVATAR_BASE_URL, ExpressHandler } from \"@s2h/utils\";\nimport * as bcrypt from \"bcryptjs\";\nimport { getGoogleToken, getGoogleUser } from \"../utils/oauth\";\nimport { accessTokenCookieOptions, refreshTokenCookieOptions, signJwt } from \"../utils/token\";\n\nexport default function handleAuthCallback( prisma: PrismaClient ): ExpressHandler {\n\treturn async function ( req, res ) {\n\t\tconst code = req.query[ \"code\" ] as string;\n\t\tconst { access_token, id_token } = await getGoogleToken( code );\n\t\tconst { verified_email, email, name, id } = await getGoogleUser( access_token, id_token );\n\n\t\tif ( !verified_email ) {\n\t\t\treturn res.status( 403 ).send( \"Google account is not verified\" );\n\t\t}\n\n\t\tlet user = await prisma.user.findUnique( { where: { email } } );\n\n\t\tif ( !user ) {\n\t\t\tconst avatar = `${ AVATAR_BASE_URL }/${ id }.svg?r=50`;\n\t\t\tconst salt = await bcrypt.genSalt( 10 );\n\t\t\tuser = await prisma.user.create( {\n\t\t\t\tdata: { email, name, avatar, salt }\n\t\t\t} );\n\t\t}\n\n\t\tconst accessToken = signJwt( user.id, \"access\" );\n\t\tconst refreshToken = signJwt( user.salt, \"refresh\" );\n\n\t\tres.cookie( \"accessToken\", accessToken, accessTokenCookieOptions );\n\t\tres.cookie( \"refreshToken\", refreshToken, refreshTokenCookieOptions );\n\n\t\treturn res.redirect( \"http://localhost:5173\" );\n\t};\n}","export * from \"./types\";\nexport * from \"./constants\";","import type { PrismaClient, User } from \"@prisma/client\";\nimport type { NextFunction, Request, Response } from \"express\";\nimport type { Namespace } from \"socket.io\";\n\nexport class Publisher<T extends { id: string }> {\n\tprivate readonly namespace: Namespace;\n\n\tconstructor( namespace: Namespace ) {\n\t\tthis.namespace = namespace;\n\t}\n\n\tpublish( gameData: T ) {\n\t\tthis.namespace.emit( gameData.id, gameData );\n\t}\n}\n\nexport type TrpcContext = {\n\tloggedInUser?: User;\n\tprisma: PrismaClient;\n}\n\nexport type TrpcMiddleware<C = TrpcContext, R = any> = ( opts: {\n\trawInput: unknown,\n\tctx: C,\n\tnext: ( opts: { ctx: C } ) => Promise<R>\n} ) => Promise<R>\n\nexport type TrpcResolverOptions<I = any, C = TrpcContext> = { input: I; ctx: C; }\n\nexport type ExpressMiddleware = ( req: Request, res: Response, next: NextFunction ) => any | Promise<any>\n\nexport type ExpressHandler = ( req: Request, res: Response ) => any | Promise<any>\n\nexport type GoogleTokenResult = {\n\taccess_token: string;\n\texpires_in: number;\n\trefresh_token: string;\n\tscope: string;\n\tid_token: string;\n}\n\nexport type GoogleUserResult = {\n\tid: string;\n\temail: string;\n\tverified_email: boolean;\n\tname: string;\n\tgiven_name: string;\n\tfamily_name: string;\n\tpicture: string;\n\tlocale: string;\n}","export const AVATAR_BASE_URL = \"https://avatars.dicebear.com/api/micah\";\n\nexport const GOOGLE_TOKEN_URL = \"https://oauth2.googleapis.com/token\";\nexport const GOOGLE_GET_USER_URL = \"https://www.googleapis.com/oauth2/v1/userinfo\";","module.exports = require(\"bcryptjs\");","import { GOOGLE_GET_USER_URL, GOOGLE_TOKEN_URL, GoogleTokenResult, GoogleUserResult } from \"@s2h/utils\";\nimport axios from \"axios\";\n\nexport async function getGoogleToken( code: string ) {\n\tconst url = new URL( GOOGLE_TOKEN_URL );\n\turl.searchParams.append( \"code\", code );\n\turl.searchParams.append( \"client_id\", process.env[ \"GOOGLE_CLIENT_ID\" ]! );\n\turl.searchParams.append( \"client_secret\", process.env[ \"GOOGLE_CLIENT_SECRET\" ]! );\n\turl.searchParams.append( \"redirect_uri\", \"http://localhost:8000/api/auth/callback/google\" );\n\turl.searchParams.append( \"grant_type\", \"authorization_code\" );\n\n\tconst res = await axios.post<GoogleTokenResult>( url.toString(), {\n\t\theaders: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n\t} );\n\n\treturn res.data;\n}\n\nexport async function getGoogleUser( access_token: string, id_token: string ) {\n\tconst url = new URL( GOOGLE_GET_USER_URL );\n\turl.searchParams.append( \"alt\", \"json\" );\n\turl.searchParams.append( \"access_token\", access_token );\n\n\tconst res = await axios.get<GoogleUserResult>( url.toString(), {\n\t\theaders: { Authorization: `Bearer ${ id_token }` }\n\t} );\n\treturn res.data;\n}","module.exports = require(\"axios\");","import type { PrismaClient } from \"@prisma/client\";\nimport type { CookieOptions } from \"express\";\nimport jwt, { JwtPayload } from \"jsonwebtoken\";\n\nexport function signJwt( subject: string, tokenType: \"access\" | \"refresh\" ) {\n\tconst expiresIn = tokenType === \"access\" ? 15 * 60 : 365 * 24 * 60 * 60;\n\treturn jwt.sign( {}, process.env[ \"JWT_SECRET\" ]!, { expiresIn, subject } );\n}\n\nexport function verifyJwt( token: string ): { valid: boolean, expired: boolean, subject?: string } {\n\ttry {\n\t\tconst payload = jwt.verify( token, process.env[ \"JWT_SECRET\" ]! ) as JwtPayload;\n\t\treturn { valid: true, expired: false, subject: payload.sub };\n\t} catch ( e: any ) {\n\t\tconsole.error( e );\n\t\treturn { valid: false, expired: e.message === \"jwt expired\" };\n\t}\n}\n\nexport async function reIssueAccessToken( refreshToken: string, prisma: PrismaClient ) {\n\tconst { subject } = verifyJwt( refreshToken );\n\n\tif ( !subject ) {\n\t\treturn;\n\t}\n\n\tconst user = await prisma.user.findUnique( { where: { salt: subject } } );\n\n\tif ( !user ) {\n\t\treturn;\n\t}\n\n\treturn signJwt( user.id, \"access\" );\n}\n\nexport const accessTokenCookieOptions: CookieOptions = {\n\tmaxAge: 9000000,\n\thttpOnly: true,\n\tdomain: \"localhost\",\n\tpath: \"/\",\n\tsameSite: \"lax\",\n\tsecure: false\n};\n\nexport const refreshTokenCookieOptions: CookieOptions = {\n\t...accessTokenCookieOptions,\n\tmaxAge: 3.154e10 // 1 year\n};","module.exports = require(\"jsonwebtoken\");","import type { ExpressHandler } from \"@s2h/utils\";\nimport { accessTokenCookieOptions, refreshTokenCookieOptions } from \"../utils/token\";\n\nexport default function handleLogout(): ExpressHandler {\n\treturn async function ( _req, res ) {\n\t\tres.clearCookie( \"accessToken\", accessTokenCookieOptions );\n\t\tres.clearCookie( \"refreshToken\", refreshTokenCookieOptions );\n\t\treturn res.send( {} );\n\t};\n}","import type { User } from \"@prisma/client\";\nimport type { ExpressHandler } from \"@s2h/utils\";\n\nexport default function getLoggedInUser(): ExpressHandler {\n\treturn async function ( _req, res ) {\n\t\tconst user = res.locals[ \"user\" ] as User;\n\t\treturn res.send( user );\n\t};\n}","import type { PrismaClient } from \"@prisma/client\";\nimport type { ExpressMiddleware } from \"@s2h/utils\";\n\nexport default function ( prisma: PrismaClient ): ExpressMiddleware {\n\treturn async function ( _req, res, next ) {\n\t\tif ( !res.locals[ \"userId\" ] ) {\n\t\t\treturn res.sendStatus( 403 );\n\t\t} else {\n\t\t\tconst user = await prisma.user.findUnique( { where: { id: res.locals[ \"userId\" ] } } );\n\t\t\tif ( !user ) {\n\t\t\t\treturn res.sendStatus( 403 );\n\t\t\t}\n\t\t\tres.locals[ \"user\" ] = user;\n\t\t\treturn next();\n\t\t}\n\t};\n}","import type { PrismaClient } from \"@prisma/client\";\nimport type { ExpressMiddleware } from \"@s2h/utils\";\nimport { accessTokenCookieOptions, reIssueAccessToken, verifyJwt } from \"../utils/token\";\n\nexport default function ( prisma: PrismaClient ): ExpressMiddleware {\n\treturn async function ( req, res, next ) {\n\t\tconst authHeader = req.headers.authorization || \"\";\n\t\tconst refreshHeader = req.headers[ \"x-refresh\" ] || \"\";\n\n\t\tconst accessToken: string = req.cookies[ \"accessToken\" ] || authHeader.replace( /^Bearer\\s/, \"\" );\n\t\tconst refreshToken: string = req.cookies[ \"refreshToken\" ] || refreshHeader;\n\n\t\tif ( !accessToken ) {\n\t\t\treturn next();\n\t\t}\n\n\t\tconst { subject, expired } = verifyJwt( accessToken );\n\n\t\tif ( subject ) {\n\t\t\tres.locals[ \"userId\" ] = subject;\n\t\t\treturn next();\n\t\t}\n\n\t\tif ( expired && !!refreshToken ) {\n\t\t\tconst newAccessToken = await reIssueAccessToken( refreshToken, prisma );\n\n\t\t\tif ( !!newAccessToken ) {\n\t\t\t\tres.cookie( \"accessToken\", newAccessToken, accessTokenCookieOptions );\n\t\t\t\tconst { subject } = verifyJwt( newAccessToken );\n\t\t\t\tres.locals[ \"userId\" ] = subject;\n\t\t\t}\n\n\t\t\treturn next();\n\t\t}\n\n\t\treturn next();\n\t};\n}","import {\n\taskCardInput,\n\tcallSetInput,\n\tcreateGameInput,\n\tcreateTeamsInput,\n\tdeclineCardInput,\n\tgetGameInput,\n\tgiveCardInput,\n\tjoinGameInput,\n\tstartGameInput,\n\ttransferTurnInput\n} from \"@s2h/literature/dtos\";\nimport { createExpressMiddleware } from \"@trpc/server/adapters/express\";\nimport { renderTrpcPanel } from \"trpc-panel\";\nimport askCardResolver from \"./resolvers/ask-card\";\nimport callSetResolver from \"./resolvers/call-set\";\nimport createGameResolver from \"./resolvers/create-game\";\nimport createTeamsResolver from \"./resolvers/create-teams\";\nimport declineCardResolver from \"./resolvers/decline-card\";\nimport getGameResolver from \"./resolvers/get-game\";\nimport giveCardResolver from \"./resolvers/give-card\";\nimport joinGameResolver from \"./resolvers/join-game\";\nimport startGameResolver from \"./resolvers/start-game\";\nimport transferTurnResolver from \"./resolvers/transfer-turn\";\nimport type { LitTrpcContext } from \"./types\";\nimport { procedure, procedureWithGame, procedureWithGameInProgress, router } from \"./utils\";\n\nexport const literatureRouter = router( {\n\tcreateGame: procedure.input( createGameInput ).mutation( createGameResolver ),\n\tjoinGame: procedure.input( joinGameInput ).mutation( joinGameResolver ),\n\tcreateTeams: procedureWithGame.input( createTeamsInput ).mutation( createTeamsResolver ),\n\tgetGame: procedureWithGame.input( getGameInput ).query( getGameResolver ),\n\tstartGame: procedureWithGame.input( startGameInput ).mutation( startGameResolver ),\n\taskCard: procedureWithGameInProgress.input( askCardInput ).mutation( askCardResolver ),\n\tdeclineCard: procedureWithGameInProgress.input( declineCardInput ).mutation( declineCardResolver ),\n\tgiveCard: procedureWithGameInProgress.input( giveCardInput ).mutation( giveCardResolver ),\n\ttransferTurn: procedureWithGameInProgress.input( transferTurnInput ).mutation( transferTurnResolver ),\n\tcallSet: procedureWithGameInProgress.input( callSetInput ).mutation( callSetResolver )\n} );\n\nexport type LiteratureRouter = typeof literatureRouter;\n\nexport function literatureExpressHandler( ctx: LitTrpcContext ) {\n\treturn createExpressMiddleware( {\n\t\trouter: literatureRouter,\n\t\tcreateContext: ( { res } ): LitTrpcContext => (\n\t\t\t{ ...ctx, loggedInUser: res.locals[ \"user\" ] }\n\t\t)\n\t} );\n}\n\nexport function literatureTrpcPanelHandler( url: string ) {\n\treturn renderTrpcPanel( literatureRouter, { url } );\n}","import { CardRank, CardSuit } from \"@s2h/cards\";\nimport * as z from \"zod\";\n\nexport const playingCard = z.object( {\n\trank: z.nativeEnum( CardRank ),\n\tsuit: z.nativeEnum( CardSuit )\n} );\n\nexport const askCardInput = z.object( {\n\tgameId: z.string().cuid(),\n\taskedFor: playingCard,\n\taskedFrom: z.string().cuid()\n} );\n\nexport type AskCardInput = z.infer<typeof askCardInput>;\n\nexport const callSetInput = z.object( {\n\tgameId: z.string().cuid(),\n\tdata: z.record( z.string(), z.array( playingCard ) )\n} );\n\nexport type CallSetInput = z.infer<typeof callSetInput>;\n\nexport const createGameInput = z.object( {\n\tplayerCount: z.number().int().optional()\n} );\n\nexport type CreateGameInput = z.infer<typeof createGameInput>;\n\nexport const createTeamsInput = z.object( {\n\tteams: z.string().array().length( 2 ),\n\tgameId: z.string().cuid()\n} );\n\nexport type CreateTeamsInput = z.infer<typeof createTeamsInput>;\n\nexport const declineCardInput = z.object( {\n\tgameId: z.string().cuid(),\n\tcardDeclined: playingCard\n} );\n\nexport type DeclineCardInput = z.infer<typeof declineCardInput>;\n\nexport const getGameInput = z.object( {\n\tgameId: z.string().cuid()\n} );\n\nexport type GetGameInput = z.infer<typeof getGameInput>;\n\nexport const giveCardInput = z.object( {\n\tgameId: z.string().cuid(),\n\tcardToGive: playingCard,\n\tgiveTo: z.string().cuid()\n} );\n\nexport type GiveCardInput = z.infer<typeof giveCardInput>;\n\nexport const joinGameInput = z.object( {\n\tcode: z.string().length( 6 )\n} );\n\nexport type JoinGameInput = z.infer<typeof joinGameInput>;\n\nexport const startGameInput = getGameInput;\n\nexport type StartGameInput = z.infer<typeof startGameInput>;\n\nexport const transferTurnInput = getGameInput;\n\nexport type TransferTurnInput = z.infer<typeof transferTurnInput>;","export * from \"./card-const\";\nexport * from \"./card-deck\";\nexport * from \"./card-hand\";\nexport * from \"./playing-card\";","import { PlayingCard } from \"./playing-card\";\n\nexport enum CardRank {\n\tACE = \"Ace\",\n\tTWO = \"Two\",\n\tTHREE = \"Three\",\n\tFOUR = \"Four\",\n\tFIVE = \"Five\",\n\tSIX = \"Six\",\n\tSEVEN = \"Seven\",\n\tEIGHT = \"Eight\",\n\tNINE = \"Nine\",\n\tTEN = \"Ten\",\n\tJACK = \"Jack\",\n\tQUEEN = \"Queen\",\n\tKING = \"King\"\n}\n\nexport enum CardSuit {\n\tHEARTS = \"Hearts\",\n\tSPADES = \"Spades\",\n\tCLUBS = \"Clubs\",\n\tDIAMONDS = \"Diamonds\"\n}\n\nexport enum CardSet {\n\tSMALL_DIAMONDS = \"Small Diamonds\",\n\tBIG_DIAMONDS = \"Big Diamonds\",\n\tSMALL_HEARTS = \"Small Hearts\",\n\tBIG_HEARTS = \"Big Hearts\",\n\tSMALL_SPADES = \"Small Spades\",\n\tBIG_SPADES = \"Big Spades\",\n\tSMALL_CLUBS = \"Small Clubs\",\n\tBIG_CLUBS = \"Big Clubs\"\n}\n\nexport const SMALL_CARD_RANKS = [\n\tCardRank.ACE,\n\tCardRank.TWO,\n\tCardRank.THREE,\n\tCardRank.FOUR,\n\tCardRank.FIVE,\n\tCardRank.SIX\n];\n\nexport const BIG_CARD_RANKS = [\n\tCardRank.SEVEN,\n\tCardRank.EIGHT,\n\tCardRank.NINE,\n\tCardRank.TEN,\n\tCardRank.JACK,\n\tCardRank.QUEEN,\n\tCardRank.KING\n];\n\nexport const CARD_RANKS = [\n\tCardRank.ACE,\n\tCardRank.TWO,\n\tCardRank.THREE,\n\tCardRank.FOUR,\n\tCardRank.FIVE,\n\tCardRank.SIX,\n\tCardRank.SEVEN,\n\tCardRank.EIGHT,\n\tCardRank.NINE,\n\tCardRank.TEN,\n\tCardRank.JACK,\n\tCardRank.QUEEN,\n\tCardRank.KING\n] as const;\n\nexport const CARD_SUITS = [ CardSuit.HEARTS, CardSuit.CLUBS, CardSuit.DIAMONDS, CardSuit.SPADES ] as const;\n\nexport const CARD_SETS = [\n\tCardSet.BIG_DIAMONDS,\n\tCardSet.BIG_CLUBS,\n\tCardSet.BIG_SPADES,\n\tCardSet.BIG_HEARTS,\n\tCardSet.SMALL_CLUBS,\n\tCardSet.SMALL_DIAMONDS,\n\tCardSet.SMALL_SPADES,\n\tCardSet.SMALL_HEARTS\n] as const;\n\nexport const SORTED_DECK: PlayingCard[] = CARD_SUITS.flatMap(\n\tsuit => CARD_RANKS.map( rank => PlayingCard.from( { rank, suit } ) )\n);\n\nexport const cardSuitMap: Record<CardSuit, PlayingCard[]> = {\n\t[ CardSuit.CLUBS ]: SORTED_DECK.filter( card => card.suit === CardSuit.CLUBS ),\n\t[ CardSuit.SPADES ]: SORTED_DECK.filter( card => card.suit === CardSuit.SPADES ),\n\t[ CardSuit.HEARTS ]: SORTED_DECK.filter( card => card.suit === CardSuit.HEARTS ),\n\t[ CardSuit.DIAMONDS ]: SORTED_DECK.filter( card => card.suit === CardSuit.DIAMONDS )\n};\n\nexport const cardSetMap: Record<CardSet, PlayingCard[]> = {\n\t[ CardSet.SMALL_CLUBS ]: cardSuitMap.Clubs.slice( 0, 6 ),\n\t[ CardSet.SMALL_SPADES ]: cardSuitMap.Spades.slice( 0, 6 ),\n\t[ CardSet.SMALL_DIAMONDS ]: cardSuitMap.Diamonds.slice( 0, 6 ),\n\t[ CardSet.SMALL_HEARTS ]: cardSuitMap.Hearts.slice( 0, 6 ),\n\t[ CardSet.BIG_CLUBS ]: cardSuitMap.Clubs.slice( 7 ),\n\t[ CardSet.BIG_SPADES ]: cardSuitMap.Spades.slice( 7 ),\n\t[ CardSet.BIG_DIAMONDS ]: cardSuitMap.Diamonds.slice( 7 ),\n\t[ CardSet.BIG_HEARTS ]: cardSuitMap.Hearts.slice( 7 )\n};","import type { CardRank } from \"./card-const\";\nimport { BIG_CARD_RANKS, CardSet, CardSuit } from \"./card-const\";\n\nexport interface IPlayingCard {\n\trank: CardRank;\n\tsuit: CardSuit;\n}\n\nexport class PlayingCard implements IPlayingCard {\n\treadonly rank: CardRank;\n\treadonly suit: CardSuit;\n\n\tprivate constructor( rank: CardRank, suit: CardSuit ) {\n\t\tthis.rank = rank;\n\t\tthis.suit = suit;\n\t}\n\n\tget set() {\n\t\tswitch ( this.suit ) {\n\t\t\tcase CardSuit.CLUBS:\n\t\t\t\treturn BIG_CARD_RANKS.includes( this.rank ) ? CardSet.BIG_CLUBS : CardSet.SMALL_CLUBS;\n\t\t\tcase CardSuit.HEARTS:\n\t\t\t\treturn BIG_CARD_RANKS.includes( this.rank ) ? CardSet.BIG_HEARTS : CardSet.SMALL_HEARTS;\n\t\t\tcase CardSuit.DIAMONDS:\n\t\t\t\treturn BIG_CARD_RANKS.includes( this.rank ) ? CardSet.BIG_DIAMONDS : CardSet.SMALL_DIAMONDS;\n\t\t\tcase CardSuit.SPADES:\n\t\t\t\treturn BIG_CARD_RANKS.includes( this.rank ) ? CardSet.BIG_SPADES : CardSet.SMALL_SPADES;\n\t\t}\n\t}\n\n\tget cardString() {\n\t\treturn `${ this.rank } of ${ this.suit }`;\n\t}\n\n\tget id() {\n\t\treturn `${ this.rank }Of${ this.suit }`;\n\t}\n\n\tstatic from( card: IPlayingCard ) {\n\t\treturn new PlayingCard( card.rank, card.suit );\n\t}\n\n\tstatic fromId( id: string ) {\n\t\tconst rank = id.split( \"Of\" )[ 0 ] as CardRank;\n\t\tconst suit = id.split( \"Of\" )[ 1 ] as CardSuit;\n\t\treturn new PlayingCard( rank, suit );\n\t}\n\n\tserialize() {\n\t\treturn JSON.parse( JSON.stringify( this ) );\n\t}\n}","import { chunk, remove, shuffle } from \"lodash\";\nimport type { CardRank } from \"./card-const\";\nimport { SORTED_DECK } from \"./card-const\";\nimport { CardHand } from \"./card-hand\";\nimport type { IPlayingCard } from \"./playing-card\";\n\nexport interface ICardDeck {\n\tcards: IPlayingCard[];\n}\n\nexport class CardDeck implements ICardDeck {\n\tcards = shuffle( SORTED_DECK );\n\n\tget length() {\n\t\treturn this.cards.length;\n\t}\n\n\tremoveCardsOfRank( rank: CardRank ) {\n\t\tremove( this.cards, [ \"rank\", rank ] );\n\t}\n\n\tgenerateHands( handCount: number ): CardHand[] {\n\t\tif ( this.length % handCount !== 0 ) {\n\t\t\treturn [];\n\t\t}\n\n\t\tconst handSize = this.cards.length / handCount;\n\t\treturn chunk( this.cards, handSize ).map( cards => CardHand.from( { cards } ) );\n\t}\n\n\tsort() {\n\t\tthis.cards = SORTED_DECK;\n\t}\n}","module.exports = require(\"lodash\");","import { filter, includes, intersection, pull, remove, uniq } from \"lodash\";\nimport type { CardSet } from \"./card-const\";\nimport { SORTED_DECK } from \"./card-const\";\nimport { IPlayingCard, PlayingCard } from \"./playing-card\";\n\nexport interface ICardHand {\n\tcards: IPlayingCard[];\n}\n\nexport class CardHand implements ICardHand {\n\tcards: PlayingCard[] = [];\n\n\tprivate constructor( cards: IPlayingCard[] ) {\n\t\tthis.cards = cards.map( PlayingCard.from );\n\t}\n\n\tget length() {\n\t\treturn this.cards.length;\n\t}\n\n\tget cardSetsInHand() {\n\t\treturn uniq( this.cards.map( card => card.set ) );\n\t}\n\n\tget cardSuitsInHand() {\n\t\treturn uniq( this.cards.map( card => card.suit ) );\n\t}\n\n\tprivate get ids() {\n\t\treturn this.cards.map( c => c.id );\n\t}\n\n\tstatic from( hand: ICardHand ) {\n\t\treturn new CardHand( hand.cards );\n\t}\n\n\tcontains( card: PlayingCard ) {\n\t\treturn includes( this.ids, card.id );\n\t}\n\n\tcontainsAll( cards: PlayingCard[] ) {\n\t\treturn intersection( cards.map( c => c.id ), this.ids ).length === cards.length;\n\t}\n\n\tcontainsSome( cards: PlayingCard[] ) {\n\t\treturn intersection( cards.map( c => c.id ), this.ids ).length > 0;\n\t}\n\n\tsorted() {\n\t\treturn new CardHand( intersection( SORTED_DECK.map( c => c.id ), this.ids )\n\t\t\t.map( PlayingCard.fromId ) );\n\t}\n\n\tmap<T>( fn: ( card: PlayingCard ) => T ): T[] {\n\t\treturn this.cards.map( fn );\n\t}\n\n\tremoveCard( card: PlayingCard ) {\n\t\tconst ids = this.ids;\n\t\tpull( ids, card.id );\n\t\tthis.cards = ids.map( PlayingCard.fromId );\n\t}\n\n\tremoveCardsOfSet( cardSet: CardSet ) {\n\t\tremove( this.cards, [ \"set\", cardSet ] );\n\t}\n\n\taddCard( ...cards: PlayingCard[] ) {\n\t\tthis.cards.push( ...cards );\n\t}\n\n\tgetCardsOfSet( set: CardSet ) {\n\t\treturn filter( this.cards, [ \"set\", set ] );\n\t}\n\n\tget( index: number ) {\n\t\treturn this.cards[ index ];\n\t}\n\n\tserialize() {\n\t\treturn JSON.parse( JSON.stringify( this ) );\n\t}\n}","module.exports = require(\"zod\");","module.exports = require(\"@trpc/server/adapters/express\");","module.exports = require(\"trpc-panel\");","import { LitMoveType } from \"@prisma/client\";\nimport { PlayingCard } from \"@s2h/cards\";\nimport type { AskCardInput } from \"@s2h/literature/dtos\";\nimport type { IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport type { LitResolverOptions, LitTrpcContext } from \"../types\";\n\nfunction validate( ctx: LitTrpcContext, input: AskCardInput ) {\n\tif ( !ctx.currentGame!.playerData[ input.askedFrom ] ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.PLAYER_NOT_FOUND } );\n\t}\n\n\tif ( ctx.currentGame!.myTeam!.id === ctx.currentGame!.playerData[ input.askedFrom ].teamId ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.CANNOT_ASK_FROM_YOUR_TEAM } );\n\t}\n\n\tconst askedCard = PlayingCard.from( input.askedFor );\n\tif ( ctx.currentGame!.loggedInPlayer!.hand.contains( askedCard ) ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.CANNOT_ASK_CARD_THAT_YOU_HAVE } );\n\t}\n\n\treturn [ ctx.currentGame!, askedCard ] as const;\n}\n\nexport default async function ( { input, ctx }: LitResolverOptions<AskCardInput> ): Promise<IEnhancedLitGame> {\n\tconst [ game, askedCard ] = validate( ctx, input );\n\n\tconst askMove = await ctx.prisma.litMove.create( {\n\t\tdata: game.getNewMoveData( {\n\t\t\ttype: LitMoveType.ASK,\n\t\t\taskedFor: askedCard,\n\t\t\taskedFrom: game.playerData[ input.askedFrom ],\n\t\t\taskedBy: game.loggedInPlayer!\n\t\t} )\n\t} );\n\n\tgame.addMove( askMove );\n\tctx.litGamePublisher.publish( game );\n\treturn game;\n};","module.exports = require(\"@trpc/server\");","export const Messages = {\n\tDUPLICATES_IN_CALL: \"You cannot call same card to be with multiple players!\",\n\tINVALID_CALL: \"You need to declare your cards in the call!\",\n\tCANNOT_CALL_SET_THAT_YOU_DONT_HAVE: \"You can only call sets that you have!\",\n\tCANNOT_ASK_CARD_THAT_YOU_HAVE: \"You cannot ask a card that you already have!\",\n\tCANNOT_GIVE_CARD_WITHIN_YOUR_TEAM: \"You cannot give card to your own team member!\",\n\tCANNOT_ASK_FROM_YOUR_TEAM: \"You cannot ask from your team members!\",\n\tINVALID_GAME_ID: \"Invalid Game ID!\",\n\tUSER_NOT_LOGGED_IN: \"User not logged in!\",\n\tINVALID_GAME_STATUS: \"Game is in Invalid State!\",\n\tGAME_NOT_FOUND: \"Game Not Found!\",\n\tNOT_PART_OF_GAME: \"You are not part of the game. Cannot perform action!\",\n\tPLAYER_CAPACITY_FULL: \"Game already has required players. Cannot join!\",\n\tNOT_ENOUGH_PLAYERS: \"A game needs to have 6 players. Not enough players!\",\n\tPLAYER_NOT_FOUND: \"Player not found!\",\n\tINVALID_GIVE_CARD: \"You cannot give a card that you don't have!\",\n\tINVALID_DECLINE_CARD: \"You cannot decline a card that you have!\",\n\tCALL_ALL_CARDS: \"Select all cards of the set to call!\",\n\tCALL_CARDS_OF_SAME_SET: \"All cards don't belong to the same set!\",\n\tCALL_CARDS_OF_MENTIONED_SET: \"Cards and Set don't match!\",\n\tCALL_WITHIN_YOUR_TEAM: \"You can only call set from within your team!\",\n\tINVALID_TRANSFER: \"You can transfer chance only when you don't have cards!\"\n};","import { LitMoveType } from \"@prisma/client\";\nimport { PlayingCard } from \"@s2h/cards\";\nimport type { CallSetInput } from \"@s2h/literature/dtos\";\nimport type { IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport type { LitResolverOptions, LitTrpcContext } from \"../types\";\n\nfunction validate( ctx: LitTrpcContext, input: CallSetInput ) {\n\tconst calledCards = Object.values( input.data ).flat().map( PlayingCard.from );\n\tconst calledCardIds = new Set( calledCards.map( card => card.id ) );\n\tconst cardSets = new Set( calledCards.map( card => card.set ) );\n\n\tconst calledPlayers = Object.keys( input.data ).map( playerId => {\n\t\tconst player = ctx.currentGame!.playerData[ playerId ];\n\t\tif ( !player ) {\n\t\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.PLAYER_NOT_FOUND } );\n\t\t}\n\t\treturn player;\n\t} );\n\n\tif ( !Object.keys( input.data ).includes( ctx.currentGame!.loggedInPlayer!.id ) ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.INVALID_CALL } );\n\t}\n\n\tif ( calledCardIds.size !== calledCards.length ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.DUPLICATES_IN_CALL } );\n\t}\n\n\tif ( cardSets.size !== 1 ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.CALL_CARDS_OF_SAME_SET } );\n\t}\n\n\tconst [ callingSet ] = cardSets;\n\n\tif ( !ctx.currentGame!.loggedInPlayer!.hand.cardSetsInHand.includes( callingSet ) ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.CANNOT_CALL_SET_THAT_YOU_DONT_HAVE } );\n\t}\n\n\tconst calledTeamIds = new Set( calledPlayers.map( player => player.teamId ) );\n\n\tif ( calledTeamIds.size !== 1 ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.CALL_WITHIN_YOUR_TEAM } );\n\t}\n\n\tif ( calledCards.length !== 6 ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.CALL_ALL_CARDS } );\n\t}\n\n\treturn [ ctx.currentGame!, callingSet ] as const;\n}\n\nexport default async function ( { input, ctx }: LitResolverOptions<CallSetInput> ): Promise<IEnhancedLitGame> {\n\tconst [ game, callingSet ] = validate( ctx, input );\n\n\tlet cardsCalledCorrect = 0;\n\tgame.myTeam!.members.forEach( ( { id, hand } ) => {\n\t\tconst cardsCalledForPlayer = input.data[ id ]?.map( PlayingCard.from );\n\t\tif ( !!cardsCalledForPlayer ) {\n\t\t\tif ( hand.containsAll( cardsCalledForPlayer ) ) {\n\t\t\t\tcardsCalledCorrect += cardsCalledForPlayer.length;\n\t\t\t}\n\t\t}\n\t} );\n\n\tif ( cardsCalledCorrect === 6 ) {\n\t\tconst myTeam = await ctx.prisma.litTeam.update( {\n\t\t\twhere: { id: game.loggedInPlayer!.teamId! },\n\t\t\tdata: { score: { increment: 1 } }\n\t\t} );\n\n\t\tgame.handleTeamUpdate( myTeam );\n\n\t\tconst callSuccessMove = await ctx.prisma.litMove.create( {\n\t\t\tdata: game.getNewMoveData( {\n\t\t\t\ttype: LitMoveType.CALL_SUCCESS,\n\t\t\t\tturnPlayer: game.loggedInPlayer!,\n\t\t\t\tcardSet: callingSet\n\t\t\t} )\n\t\t} );\n\n\t\tgame.addMove( callSuccessMove );\n\n\t} else {\n\t\tconst oppositeTeam = await ctx.prisma.litTeam.update( {\n\t\t\twhere: { id: game.oppositeTeam!.members[ 0 ].teamId! },\n\t\t\tdata: { score: { increment: 1 } }\n\t\t} );\n\n\t\tgame.handleTeamUpdate( oppositeTeam );\n\n\t\tconst callFailMove = await ctx.prisma.litMove.create( {\n\t\t\tdata: game.getNewMoveData( {\n\t\t\t\ttype: LitMoveType.CALL_FAIL,\n\t\t\t\tturnPlayer: game.oppositeTeam!.membersWithCards[ 0 ],\n\t\t\t\tcardSet: callingSet,\n\t\t\t\tcallingPlayer: game.loggedInPlayer\n\t\t\t} )\n\t\t} );\n\n\t\tgame.addMove( callFailMove );\n\t}\n\n\tconst handData = game.removeCardsOfSetFromGameAndGetUpdatedHands( callingSet );\n\n\tconst updatedPlayers = await Promise.all(\n\t\tObject.keys( handData ).map( playerId =>\n\t\t\tctx.prisma.litPlayer.update( {\n\t\t\t\twhere: { id: playerId },\n\t\t\t\tdata: { hand: handData[ playerId ].serialize() }\n\t\t\t} )\n\t\t)\n\t);\n\n\tgame.handlePlayerUpdate( ...updatedPlayers );\n\n\tctx.litGamePublisher.publish( game );\n\treturn game;\n};\n","import type { CreateGameInput } from \"@s2h/literature/dtos\";\nimport { EnhancedLitGame, IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport type { LitResolverOptions } from \"../types\";\n\nexport default async function ( { ctx, input }: LitResolverOptions<CreateGameInput> ): Promise<IEnhancedLitGame> {\n\tconst game = await ctx.prisma.litGame.create( {\n\t\tdata: EnhancedLitGame.generateNewGameData( {\n\t\t\tplayerCount: input.playerCount,\n\t\t\tcreatedBy: ctx.loggedInUser!\n\t\t} )\n\t} );\n\n\tconst enhancedGame = EnhancedLitGame.from( { ...game, moves: [], teams: [], players: [] } );\n\tconst player = await ctx.prisma.litPlayer.create( {\n\t\tdata: enhancedGame.generateNewPlayerData( ctx.loggedInUser! )\n\t} );\n\n\tenhancedGame.addPlayer( player );\n\treturn enhancedGame;\n};","export * from \"./enhanced-game\";\nexport * from \"./enhanced-player\";\nexport * from \"./enhanced-move\";\nexport * from \"./enhanced-team\";","import { LitGame, LitGameStatus, LitMove, LitMoveType, LitPlayer, LitTeam, Prisma, User } from \"@prisma/client\";\nimport { CardDeck, CardHand, CardRank, CardSet, cardSetMap, PlayingCard } from \"@s2h/cards\";\nimport { EnhancedLitMove, IEnhancedLitMove } from \"./enhanced-move\";\nimport { EnhancedLitPlayer, IEnhancedLitPlayer } from \"./enhanced-player\";\nimport { EnhancedLitTeam, IEnhancedLitTeam } from \"./enhanced-team\";\n\ntype LitGameData = LitGame & { players: LitPlayer[], moves: LitMove[], teams: LitTeam[] }\n\ntype LitAskMoveParams = { askedFrom: EnhancedLitPlayer, askedBy: EnhancedLitPlayer, askedFor: PlayingCard };\ntype LitGiveMoveParams = { givingPlayer: EnhancedLitPlayer, takingPlayer: EnhancedLitPlayer, card: PlayingCard };\ntype LitTurnMoveParams = { turnPlayer: EnhancedLitPlayer };\ntype LitDeclinedMoveParams = { askingPlayer: EnhancedLitPlayer, declinedPlayer: EnhancedLitPlayer, card: PlayingCard };\ntype LitCallMoveParams = { turnPlayer: EnhancedLitPlayer, cardSet: CardSet, callingPlayer: EnhancedLitPlayer };\n\ntype LitMoveParams = { type: LitMoveType } & (\n\tLitGiveMoveParams\n\t| LitAskMoveParams\n\t| LitTurnMoveParams\n\t| LitDeclinedMoveParams\n\t| LitCallMoveParams );\n\ntype LitCreateGameParams = { playerCount?: number, createdBy: User };\n\nexport interface IEnhancedLitGame {\n\tid: string;\n\tcode: string;\n\tplayerCount: number;\n\tcreatedById: string;\n\tcreatedAt: Date;\n\tupdatedAt: Date;\n\tstatus: LitGameStatus;\n\tplayers: IEnhancedLitPlayer[];\n\tteams: IEnhancedLitTeam[];\n\tmoves: IEnhancedLitMove[];\n}\n\nexport class EnhancedLitGame implements IEnhancedLitGame {\n\treadonly id: string;\n\treadonly code: string;\n\treadonly playerCount: number;\n\treadonly createdById: string;\n\treadonly createdAt: Date;\n\treadonly updatedAt: Date;\n\n\tstatus: LitGameStatus;\n\n\tplayers: EnhancedLitPlayer[];\n\tteams: EnhancedLitTeam[];\n\tmoves: EnhancedLitMove[];\n\n\treadonly creator: EnhancedLitPlayer;\n\n\tplayerData: Record<string, EnhancedLitPlayer>;\n\tteamData: Record<string, EnhancedLitTeam>;\n\tloggedInUserId?: string;\n\n\tconstructor( game: IEnhancedLitGame ) {\n\t\tthis.id = game.id;\n\t\tthis.code = game.code;\n\t\tthis.playerCount = game.playerCount;\n\t\tthis.createdById = game.createdById;\n\t\tthis.createdAt = game.createdAt;\n\t\tthis.updatedAt = game.updatedAt;\n\t\tthis.status = game.status;\n\t\tthis.players = game.players.map( player => new EnhancedLitPlayer( player ) );\n\t\tthis.teams = game.teams.map( team => new EnhancedLitTeam( team ) );\n\t\tthis.moves = game.moves.map( move => new EnhancedLitMove( move ) );\n\n\t\tthis.creator = this.players.find( player => player.userId === this.createdById )!;\n\n\t\tthis.playerData = {};\n\t\tthis.players.forEach( player => {\n\t\t\tthis.playerData[ player.id ] = player;\n\t\t} );\n\n\t\tthis.teamData = {};\n\t\tthis.teams.forEach( team => {\n\t\t\tthis.teamData[ team.id ] = team;\n\t\t} );\n\t}\n\n\tget loggedInPlayer() {\n\t\treturn this.players.find( player => player.userId === this.loggedInUserId );\n\t}\n\n\tget askableCardSets() {\n\t\tconst hand = this.loggedInPlayer?.hand || CardHand.from( { cards: [] } );\n\t\treturn hand.cardSetsInHand.filter( cardSet => hand.getCardsOfSet( cardSet ).length < 6 );\n\t}\n\n\tget callableCardSets() {\n\t\tconst hand = this.loggedInPlayer?.hand || CardHand.from( { cards: [] } );\n\t\treturn hand.cardSetsInHand.filter( cardSet => hand.getCardsOfSet( cardSet ).length <= 6 );\n\t}\n\n\tget myTeam() {\n\t\tif ( !this.loggedInPlayer?.teamId ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.teamData[ this.loggedInPlayer.teamId ];\n\t}\n\n\tget oppositeTeam() {\n\t\tif ( !this.loggedInPlayer?.teamId ) {\n\t\t\treturn null;\n\t\t}\n\t\treturn this.teams[ 0 ].id !== this.loggedInPlayer.teamId ? this.teams[ 0 ] : this.teams[ 1 ];\n\t}\n\n\tstatic from( gameData: LitGameData ) {\n\t\tconst players = gameData.players.map( EnhancedLitPlayer.from );\n\t\tconst teams = gameData.teams.map( team => {\n\t\t\tconst enhancedTeam = EnhancedLitTeam.from( team );\n\t\t\tenhancedTeam.addMembers( players );\n\t\t\treturn enhancedTeam;\n\t\t} );\n\t\tconst moves = gameData.moves.map( EnhancedLitMove.from )\n\t\t\t.sort( ( a, b ) => b.createdAt.getTime() - a.createdAt.getTime() );\n\n\t\treturn new EnhancedLitGame( { ...gameData, players, teams, moves } );\n\t}\n\n\tstatic generateGameCode() {\n\t\tconst chars = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\";\n\t\tlet result = \"\";\n\t\tfor ( let i = 0; i < 6; i++ ) {\n\t\t\tresult += chars[ Math.floor( Math.random() * 36 ) ];\n\t\t}\n\t\treturn result;\n\t}\n\n\tstatic generateNewGameData( { playerCount, createdBy }: LitCreateGameParams ) {\n\t\treturn { createdById: createdBy.id, playerCount, code: EnhancedLitGame.generateGameCode() };\n\t}\n\n\tgenerateNewPlayerData( { name, avatar, id }: User ): Prisma.LitPlayerUncheckedCreateInput {\n\t\treturn { name, avatar, userId: id, hand: { cards: [] }, gameId: this.id };\n\t}\n\n\taddPlayer( player: LitPlayer ) {\n\t\tthis.playerData[ player.id ] = EnhancedLitPlayer.from( player );\n\t\tthis.players = Object.values( this.playerData );\n\t}\n\n\tisUserAlreadyInGame( { id }: User ) {\n\t\treturn !!this.players.find( player => player.userId === id );\n\t}\n\n\taddTeams( teams: LitTeam[] ) {\n\t\tteams.forEach( team => {\n\t\t\tthis.teamData[ team.id ] = EnhancedLitTeam.from( team );\n\t\t} );\n\n\t\tthis.teams = Object.values( this.teamData );\n\t}\n\n\tdealCardsAndGetHands() {\n\t\tconst deck = new CardDeck();\n\t\tdeck.removeCardsOfRank( CardRank.SEVEN );\n\t\tconst hands = deck.generateHands( this.playerCount );\n\n\t\tconst handData: Record<string, CardHand> = {};\n\t\tthis.players.forEach( ( player, i ) => {\n\t\t\thandData[ player.id ] = hands[ i ]!;\n\t\t} );\n\n\t\treturn handData;\n\t}\n\n\taddMove( move: LitMove ) {\n\t\tthis.moves = [ EnhancedLitMove.from( move ), ...this.moves ];\n\t}\n\n\tgetNewMoveData( data: LitMoveParams ) {\n\t\tswitch ( data.type ) {\n\t\t\tcase LitMoveType.ASK:\n\t\t\t\tconst { askedFrom, askedBy, askedFor } = data as LitAskMoveParams;\n\t\t\t\treturn {\n\t\t\t\t\tgameId: this.id,\n\t\t\t\t\ttype: LitMoveType.ASK,\n\t\t\t\t\tdescription: `${ askedBy.name } asked for ${ askedFor.cardString } from ${ askedFrom.name }`,\n\t\t\t\t\taskedFor: askedFor.serialize(),\n\t\t\t\t\taskedFromId: askedFrom.id,\n\t\t\t\t\taskedById: askedBy.id\n\t\t\t\t};\n\n\t\t\tcase LitMoveType.GIVEN: {\n\t\t\t\tconst { givingPlayer, takingPlayer, card } = data as LitGiveMoveParams;\n\t\t\t\treturn {\n\t\t\t\t\tgameId: this.id,\n\t\t\t\t\ttype: LitMoveType.GIVEN,\n\t\t\t\t\tturnId: takingPlayer.id,\n\t\t\t\t\tdescription: `${ givingPlayer.name } gave ${ card.cardString } to ${ takingPlayer.name }`\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcase LitMoveType.TURN: {\n\t\t\t\tconst { turnPlayer } = data as LitTurnMoveParams;\n\t\t\t\treturn {\n\t\t\t\t\tgameId: this.id,\n\t\t\t\t\ttype: LitMoveType.TURN,\n\t\t\t\t\tturnId: turnPlayer.id,\n\t\t\t\t\tdescription: `Waiting for ${ turnPlayer.name } to Ask or Call`\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcase LitMoveType.DECLINED: {\n\t\t\t\tconst { askingPlayer, declinedPlayer, card } = data as LitDeclinedMoveParams;\n\t\t\t\treturn {\n\t\t\t\t\tgameId: this.id,\n\t\t\t\t\ttype: LitMoveType.DECLINED,\n\t\t\t\t\tturnId: declinedPlayer.id,\n\t\t\t\t\tdescription: `${ declinedPlayer.name } declined ${ askingPlayer.name }'s ask for ${ card.cardString }`\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcase LitMoveType.CALL_SUCCESS: {\n\t\t\t\tconst { turnPlayer, cardSet } = data as LitCallMoveParams;\n\t\t\t\treturn {\n\t\t\t\t\tgameId: this.id,\n\t\t\t\t\ttype: LitMoveType.CALL_SUCCESS,\n\t\t\t\t\tturnId: turnPlayer.id,\n\t\t\t\t\tdescription: `${ turnPlayer.name } called ${ cardSet } correctly`\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tcase LitMoveType.CALL_FAIL: {\n\t\t\t\tconst { turnPlayer, cardSet, callingPlayer } = data as LitCallMoveParams;\n\t\t\t\treturn {\n\t\t\t\t\tgameId: this.id,\n\t\t\t\t\ttype: LitMoveType.CALL_FAIL,\n\t\t\t\t\tturnId: turnPlayer.id,\n\t\t\t\t\tdescription: `${ callingPlayer.name } called ${ cardSet } incorrectly. ${ turnPlayer.name }'s turn`\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\n\thandlePlayerUpdate( ...players: LitPlayer[] ) {\n\t\tplayers.forEach( player => {\n\t\t\tthis.playerData[ player.id ] = EnhancedLitPlayer.from( player );\n\t\t} );\n\n\t\tthis.players = Object.values( this.playerData );\n\t\tthis.updateTeams();\n\t}\n\n\tremoveCardsOfSetFromGameAndGetUpdatedHands( cardSet: CardSet ) {\n\t\tconst handData: Record<string, CardHand> = {};\n\t\tconst cardsCalled = cardSetMap[ cardSet ];\n\n\t\tthis.players.forEach( player => {\n\t\t\tif ( player.hand.containsSome( cardsCalled ) ) {\n\t\t\t\tplayer.hand.removeCardsOfSet( cardSet );\n\t\t\t\thandData[ player.id ] = player.hand;\n\t\t\t}\n\t\t} );\n\n\t\treturn handData;\n\t}\n\n\thandleTeamUpdate( ...teams: LitTeam[] ) {\n\t\tteams.forEach( team => {\n\t\t\tthis.teamData[ team.id ] = EnhancedLitTeam.from( team );\n\t\t\tthis.teamData[ team.id ].addMembers( this.players );\n\t\t} );\n\n\t\tthis.teams = Object.values( this.teamData );\n\t}\n\n\tprivate updateTeams() {\n\t\tObject.keys( this.teamData ).map( teamId => {\n\t\t\tthis.teamData[ teamId ].members = this.players.filter( player => player.teamId === teamId );\n\t\t} );\n\n\t\tthis.teams = Object.values( this.teamData );\n\t}\n}","import type { LitMove, LitMoveType } from \"@prisma/client\";\nimport { IPlayingCard, PlayingCard } from \"@s2h/cards\";\n\nexport interface IEnhancedLitMove {\n\tid: string;\n\ttype: LitMoveType;\n\tdescription: string;\n\tturnId: string | null;\n\taskedFromId: string | null;\n\taskedById: string | null;\n\tgameId: string;\n\tcreatedAt: Date;\n\taskedFor: IPlayingCard | null;\n}\n\nexport class EnhancedLitMove implements IEnhancedLitMove {\n\treadonly id: string;\n\treadonly type: LitMoveType;\n\treadonly description: string;\n\treadonly turnId: string | null;\n\treadonly askedFromId: string | null;\n\treadonly askedById: string | null;\n\treadonly gameId: string;\n\treadonly createdAt: Date;\n\n\treadonly askedFor: PlayingCard | null;\n\n\tconstructor( move: IEnhancedLitMove ) {\n\t\tthis.id = move.id;\n\t\tthis.type = move.type;\n\t\tthis.description = move.description;\n\t\tthis.turnId = move.turnId;\n\t\tthis.askedFromId = move.askedFromId;\n\t\tthis.askedById = move.askedById;\n\t\tthis.gameId = move.gameId;\n\t\tthis.createdAt = move.createdAt;\n\t\tthis.askedFor = !!move.askedFor ? PlayingCard.from( move.askedFor ) : null;\n\t}\n\n\tstatic from( move: LitMove ) {\n\t\treturn new EnhancedLitMove( {\n\t\t\t...move,\n\t\t\taskedFor: !!move.askedFor ? PlayingCard.from( move.askedFor as unknown as IPlayingCard ) : null\n\t\t} );\n\t}\n}","import type { LitPlayer } from \"@prisma/client\";\nimport { CardHand, ICardHand } from \"@s2h/cards\";\n\nexport interface IEnhancedLitPlayer {\n\tid: string;\n\tname: string;\n\tavatar: string;\n\tuserId: string;\n\tgameId: string;\n\tteamId?: string | null;\n\thand: ICardHand;\n}\n\nexport class EnhancedLitPlayer implements IEnhancedLitPlayer {\n\treadonly id: string;\n\treadonly name: string;\n\treadonly avatar: string;\n\treadonly userId: string;\n\treadonly gameId: string;\n\tteamId?: string | null;\n\thand: CardHand;\n\n\tconstructor( player: IEnhancedLitPlayer ) {\n\t\tthis.id = player.id;\n\t\tthis.name = player.name;\n\t\tthis.avatar = player.avatar;\n\t\tthis.userId = player.userId;\n\t\tthis.gameId = player.gameId;\n\t\tthis.teamId = player.teamId;\n\t\tthis.hand = CardHand.from( player.hand );\n\t}\n\n\tstatic from( player: LitPlayer ) {\n\t\treturn new EnhancedLitPlayer( {\n\t\t\t...player,\n\t\t\thand: CardHand.from( player.hand as unknown as ICardHand )\n\t\t} );\n\t}\n}","import type { LitTeam } from \"@prisma/client\";\nimport { EnhancedLitPlayer, IEnhancedLitPlayer } from \"./enhanced-player\";\n\nexport interface IEnhancedLitTeam {\n\tid: string;\n\tname: string;\n\tscore: number;\n\tgameId: string;\n\tmembers: IEnhancedLitPlayer[];\n}\n\nexport class EnhancedLitTeam implements IEnhancedLitTeam {\n\treadonly id: string;\n\treadonly name: string;\n\treadonly score: number;\n\treadonly gameId: string;\n\n\tmembers: EnhancedLitPlayer[];\n\n\tconstructor( team: IEnhancedLitTeam ) {\n\t\tthis.id = team.id;\n\t\tthis.name = team.name;\n\t\tthis.score = team.score;\n\t\tthis.gameId = team.gameId;\n\t\tthis.members = team.members.map( member => new EnhancedLitPlayer( member ) );\n\t}\n\n\tget membersWithCards() {\n\t\treturn this.members.filter( member => member.hand.length > 0 );\n\t}\n\n\tstatic from( litTeam: LitTeam ) {\n\t\treturn new EnhancedLitTeam( { ...litTeam, members: [] } );\n\t}\n\n\taddMembers( players: EnhancedLitPlayer[] ) {\n\t\tthis.members = players.filter( player => player.teamId === this.id );\n\t}\n}","import { LitGameStatus } from \"@prisma/client\";\nimport type { CreateTeamsInput } from \"@s2h/literature/dtos\";\nimport type { IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport { TRPCError } from \"@trpc/server\";\nimport { shuffle } from \"lodash\";\nimport { Messages } from \"../constants\";\nimport type { LitResolverOptions, LitTrpcContext } from \"../types\";\n\nfunction validate( ctx: LitTrpcContext ) {\n\tif ( ctx.currentGame!.status !== LitGameStatus.PLAYERS_READY ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.INVALID_GAME_STATUS } );\n\t}\n\n\tif ( ctx.currentGame!.players.length !== ctx.currentGame!.playerCount ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.NOT_ENOUGH_PLAYERS } );\n\t}\n\n\treturn [ ctx.currentGame! ] as const;\n}\n\nexport default async function ( { input, ctx }: LitResolverOptions<CreateTeamsInput> ): Promise<IEnhancedLitGame> {\n\tconst [ game ] = validate( ctx );\n\n\tconst teams = await Promise.all( input.teams.map( name =>\n\t\tctx.prisma.litTeam.create( { data: { name, gameId: game.id } } )\n\t) );\n\n\tgame.addTeams( teams );\n\n\tconst players = await Promise.all(\n\t\tshuffle( game.players ).map( ( player, i ) =>\n\t\t\tctx.prisma.litPlayer.update( {\n\t\t\t\twhere: { id: player.id },\n\t\t\t\tdata: { teamId: teams[ i % 2 ].id }\n\t\t\t} )\n\t\t)\n\t);\n\n\tgame.handlePlayerUpdate( ...players );\n\n\tawait ctx.prisma.litGame.update( {\n\t\twhere: { id: game.id },\n\t\tdata: { status: LitGameStatus.TEAMS_CREATED }\n\t} );\n\n\tgame.status = LitGameStatus.TEAMS_CREATED;\n\n\tctx.litGamePublisher.publish( game );\n\treturn game;\n};","import { LitMoveType } from \"@prisma/client\";\nimport { PlayingCard } from \"@s2h/cards\";\nimport type { DeclineCardInput } from \"@s2h/literature/dtos\";\nimport type { IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport type { LitResolverOptions, LitTrpcContext } from \"../types\";\n\nfunction validate( ctx: LitTrpcContext, input: DeclineCardInput ) {\n\tconst cardDeclined = PlayingCard.from( input.cardDeclined );\n\n\tif ( ctx.currentGame!.loggedInPlayer!.hand.contains( cardDeclined ) ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.INVALID_DECLINE_CARD } );\n\t}\n\n\treturn [ ctx.currentGame!, cardDeclined ] as const;\n}\n\nexport default async function ( { ctx, input }: LitResolverOptions<DeclineCardInput> ): Promise<IEnhancedLitGame> {\n\tconst [ game, cardDeclined ] = validate( ctx, input );\n\n\tconst declineMove = await ctx.prisma.litMove.create( {\n\t\tdata: game.getNewMoveData( {\n\t\t\ttype: LitMoveType.DECLINED,\n\t\t\tdeclinedPlayer: game.loggedInPlayer!,\n\t\t\taskingPlayer: game.playerData[ game.moves[ 0 ].askedById! ],\n\t\t\tcard: cardDeclined\n\t\t} )\n\t} );\n\n\tgame.addMove( declineMove );\n\tctx.litGamePublisher.publish( game );\n\treturn game;\n};","import type { GetGameInput } from \"@s2h/literature/dtos\";\nimport type { IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport type { LitResolverOptions } from \"../types\";\n\nexport default async function ( { ctx }: LitResolverOptions<GetGameInput> ): Promise<IEnhancedLitGame> {\n\treturn ctx.currentGame!;\n};","import { LitMoveType } from \"@prisma/client\";\nimport { PlayingCard } from \"@s2h/cards\";\nimport type { GiveCardInput } from \"@s2h/literature/dtos\";\nimport type { IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport type { LitResolverOptions, LitTrpcContext } from \"../types\";\n\nfunction validate( ctx: LitTrpcContext, input: GiveCardInput ) {\n\tconst cardToGive = PlayingCard.from( input.cardToGive );\n\tconst givingPlayer = ctx.currentGame!.loggedInPlayer!;\n\tconst takingPlayer = ctx.currentGame!.playerData[ input.giveTo ];\n\n\tif ( !takingPlayer ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.PLAYER_NOT_FOUND } );\n\t}\n\n\tif ( takingPlayer.teamId === givingPlayer.teamId ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.CANNOT_GIVE_CARD_WITHIN_YOUR_TEAM } );\n\t}\n\n\tif ( !givingPlayer.hand.contains( cardToGive ) ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.INVALID_GIVE_CARD } );\n\t}\n\n\treturn [ ctx.currentGame!, givingPlayer, takingPlayer, cardToGive ] as const;\n}\n\nexport default async function ( { input, ctx }: LitResolverOptions<GiveCardInput> ): Promise<IEnhancedLitGame> {\n\tconst [ game, givingPlayer, takingPlayer, cardToGive ] = validate( ctx, input );\n\n\tgivingPlayer.hand.removeCard( cardToGive );\n\ttakingPlayer.hand.addCard( cardToGive );\n\n\tconst updatedPlayers = await Promise.all(\n\t\t[\n\t\t\tctx.prisma.litPlayer.update( {\n\t\t\t\twhere: { id: givingPlayer.id },\n\t\t\t\tdata: { hand: givingPlayer.hand.serialize() }\n\t\t\t} ),\n\t\t\tctx.prisma.litPlayer.update( {\n\t\t\t\twhere: { id: takingPlayer.id },\n\t\t\t\tdata: { hand: takingPlayer.hand.serialize() }\n\t\t\t} )\n\t\t]\n\t);\n\n\tgame.handlePlayerUpdate( ...updatedPlayers );\n\n\tconst giveCardMove = await ctx.prisma.litMove.create( {\n\t\tdata: game.getNewMoveData( { type: LitMoveType.GIVEN, takingPlayer, givingPlayer, card: cardToGive } )\n\t} );\n\n\tgame.addMove( giveCardMove );\n\n\tctx.litGamePublisher.publish( game );\n\treturn game;\n};","import { LitGameStatus } from \"@prisma/client\";\nimport type { JoinGameInput } from \"@s2h/literature/dtos\";\nimport { EnhancedLitGame, IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport type { LitResolverOptions, LitTrpcContext } from \"../types\";\n\nasync function validate( ctx: LitTrpcContext, input: JoinGameInput ) {\n\tconst game = await ctx.prisma.litGame.findFirst( {\n\t\twhere: { code: input.code },\n\t\tinclude: { players: true }\n\t} );\n\n\tif ( !game ) {\n\t\tthrow new TRPCError( { code: \"NOT_FOUND\", message: Messages.GAME_NOT_FOUND } );\n\t}\n\n\tconst enhancedGame = EnhancedLitGame.from( { ...game, moves: [], teams: [] } );\n\n\tif ( game.players.length >= game.playerCount ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.PLAYER_CAPACITY_FULL } );\n\t}\n\n\treturn enhancedGame;\n}\n\nexport default async function ( { ctx, input }: LitResolverOptions<JoinGameInput> ): Promise<IEnhancedLitGame> {\n\tconst game = await validate( ctx, input );\n\n\tif ( game.isUserAlreadyInGame( ctx.loggedInUser! ) ) {\n\t\treturn game;\n\t}\n\n\tconst player = await ctx.prisma.litPlayer.create( {\n\t\tdata: game.generateNewPlayerData( ctx.loggedInUser! )\n\t} );\n\n\tgame.addPlayer( player );\n\n\tgame.status = game.players.length === game.playerCount\n\t\t? LitGameStatus.PLAYERS_READY\n\t\t: LitGameStatus.NOT_STARTED;\n\n\tawait ctx.prisma.litGame.update( {\n\t\twhere: { id: game.id },\n\t\tdata: { status: game.status }\n\t} );\n\n\tctx.litGamePublisher.publish( game );\n\treturn game;\n};","import { LitGameStatus, LitMoveType } from \"@prisma/client\";\nimport type { StartGameInput } from \"@s2h/literature/dtos\";\nimport type { IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport type { LitResolverOptions, LitTrpcContext } from \"../types\";\n\nfunction validate( ctx: LitTrpcContext ) {\n\tif ( ctx.currentGame!.status !== LitGameStatus.TEAMS_CREATED ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.INVALID_GAME_STATUS } );\n\t}\n\n\treturn [ ctx.currentGame! ] as const;\n}\n\nexport default async function ( { input, ctx }: LitResolverOptions<StartGameInput> ): Promise<IEnhancedLitGame> {\n\tconst [ game ] = validate( ctx );\n\tconst handData = game.dealCardsAndGetHands();\n\n\tconst updatedPlayers = await Promise.all(\n\t\tgame.players.map( player => ctx.prisma.litPlayer.update( {\n\t\t\twhere: { id: player.id },\n\t\t\tdata: { hand: handData[ player.id ].serialize() }\n\t\t} ) )\n\t);\n\n\tgame.handlePlayerUpdate( ...updatedPlayers );\n\n\tconst firstMove = await ctx.prisma.litMove.create( {\n\t\tdata: game.getNewMoveData( {\n\t\t\ttype: LitMoveType.TURN,\n\t\t\tturnPlayer: game.loggedInPlayer!\n\t\t} )\n\t} );\n\n\tgame.addMove( firstMove );\n\n\tawait ctx.prisma.litGame.update( {\n\t\twhere: { id: input.gameId },\n\t\tdata: { status: LitGameStatus.IN_PROGRESS }\n\t} );\n\n\tgame.status = LitGameStatus.IN_PROGRESS;\n\n\tctx.litGamePublisher.publish( game );\n\treturn game;\n};","import { LitGameStatus, LitMoveType } from \"@prisma/client\";\nimport type { TransferTurnInput } from \"@s2h/literature/dtos\";\nimport type { IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport type { LitResolverOptions, LitTrpcContext } from \"../types\";\n\nfunction validate( ctx: LitTrpcContext ) {\n\tif ( ctx.currentGame!.loggedInPlayer!.hand.length !== 0 ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.INVALID_TRANSFER } );\n\t}\n\n\treturn [ ctx.currentGame! ] as const;\n}\n\nexport default async function ( { input, ctx }: LitResolverOptions<TransferTurnInput> ): Promise<IEnhancedLitGame> {\n\tconst [ game ] = validate( ctx );\n\n\tif ( game.myTeam!.membersWithCards.length === 0 && game.oppositeTeam!.membersWithCards.length === 0 ) {\n\t\tawait ctx.prisma.litGame.update( {\n\t\t\twhere: { id: input.gameId },\n\t\t\tdata: { status: LitGameStatus.COMPLETED }\n\t\t} );\n\n\t\tgame.status = LitGameStatus.COMPLETED;\n\n\t\tctx.litGamePublisher.publish( game );\n\t\treturn game;\n\t}\n\n\tconst nextPlayer = game.myTeam!.membersWithCards.length === 0\n\t\t? game.oppositeTeam!.membersWithCards[ 0 ]\n\t\t: game.myTeam!.membersWithCards[ 0 ];\n\n\tconst transferTurnMove = await ctx.prisma.litMove.create( {\n\t\tdata: game.getNewMoveData( { type: LitMoveType.TURN, turnPlayer: nextPlayer } )\n\t} );\n\n\tgame.addMove( transferTurnMove );\n\n\tctx.litGamePublisher.publish( game );\n\treturn game;\n};\n","import * as trpc from \"@trpc/server\";\nimport superjson from \"superjson\";\nimport requireGameMiddlewareFn from \"../middlewares/require-game\";\nimport requireGameInProgressMiddlewareFn from \"../middlewares/require-game-in-progress\";\nimport requirePlayerMiddlewareFn from \"../middlewares/require-player\";\nimport { LitTrpcContext } from \"../types\";\n\nexport const t = trpc.initTRPC.context<LitTrpcContext>().create( { transformer: superjson } );\nexport const router = t.router;\nexport const procedure = t.procedure;\nexport const procedureWithGame = t.procedure.use( requireGameMiddlewareFn ).use( requirePlayerMiddlewareFn );\nexport const procedureWithGameInProgress = procedureWithGame.use( requireGameInProgressMiddlewareFn );","module.exports = require(\"superjson\");","import { getGameInput } from \"@s2h/literature/dtos\";\nimport { EnhancedLitGame } from \"@s2h/literature/utils\";\nimport { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport type { LitGameData, LitTrpcMiddleware } from \"../types\";\n\nexport const requireGame: LitTrpcMiddleware = async function ( { ctx, rawInput, next } ) {\n\tconst result = getGameInput.safeParse( rawInput );\n\n\tif ( !result.success ) {\n\t\tconsole.error( result.error );\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.INVALID_GAME_ID } );\n\t}\n\n\tconst game: LitGameData | null = await ctx.prisma.litGame.findUnique( {\n\t\twhere: { id: result.data.gameId },\n\t\tinclude: { players: true, moves: true, teams: true }\n\t} );\n\n\tif ( !game ) {\n\t\tthrow new TRPCError( { code: \"NOT_FOUND\", message: Messages.GAME_NOT_FOUND } );\n\t}\n\n\tconst currentGame = EnhancedLitGame.from( game );\n\treturn next( { ctx: { ...ctx, currentGame } } );\n};\n\nexport default requireGame;","import { LitGameStatus } from \"@prisma/client\";\nimport { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport { LitTrpcMiddleware } from \"../types\";\n\nconst requireGameInProgress: LitTrpcMiddleware = async ( { ctx, next } ) => {\n\tif ( !ctx.currentGame ) {\n\t\tthrow new TRPCError( { code: \"NOT_FOUND\", message: Messages.GAME_NOT_FOUND } );\n\t}\n\n\tif ( ctx.currentGame.status !== LitGameStatus.IN_PROGRESS ) {\n\t\tthrow new TRPCError( { code: \"BAD_REQUEST\", message: Messages.INVALID_GAME_STATUS } );\n\t}\n\n\treturn next( { ctx } );\n};\n\nexport default requireGameInProgress;","import { TRPCError } from \"@trpc/server\";\nimport { Messages } from \"../constants\";\nimport { LitTrpcMiddleware } from \"../types\";\n\nconst requirePlayer: LitTrpcMiddleware = async ( { ctx, next } ) => {\n\tif ( !ctx.loggedInUser ) {\n\t\tthrow new TRPCError( { code: \"UNAUTHORIZED\", message: Messages.USER_NOT_LOGGED_IN } );\n\t}\n\n\tif ( !ctx.currentGame ) {\n\t\tthrow new TRPCError( { code: \"NOT_FOUND\", message: Messages.GAME_NOT_FOUND } );\n\t}\n\n\tctx.currentGame.loggedInUserId = ctx.loggedInUser.id;\n\n\tif ( !ctx.currentGame.loggedInPlayer ) {\n\t\tthrow new TRPCError( { code: \"FORBIDDEN\", message: Messages.NOT_PART_OF_GAME } );\n\t}\n\n\treturn next( { ctx } );\n};\n\nexport default requirePlayer;","module.exports = require(\"cookie-parser\");","module.exports = require(\"cors\");","module.exports = require(\"dotenv\");","module.exports = require(\"express\");","module.exports = require(\"http\");","module.exports = require(\"morgan\");","module.exports = require(\"socket.io\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import { PrismaClient } from \"@prisma/client\";\nimport { deserializeUser, handleAuthCallback, handleGetLoggedInUser, handleLogout, requireUser } from \"@s2h/auth\";\nimport { literatureExpressHandler } from \"@s2h/literature/router\";\nimport type { IEnhancedLitGame } from \"@s2h/literature/utils\";\nimport { Publisher } from \"@s2h/utils\";\nimport cookieParser from \"cookie-parser\";\nimport cors from \"cors\";\nimport dotenv from \"dotenv\";\nimport express from \"express\";\nimport http from \"http\";\nimport morgan from \"morgan\";\nimport { Server } from \"socket.io\";\n\ndotenv.config();\n\nconst port = process.env[ \"PORT\" ] || 8000;\nconst prisma = new PrismaClient();\n\nconst app = express();\nconst server = http.createServer( app );\nconst io = new Server( server, {\n\tcors: {\n\t\torigin: [ \"http://localhost:5173\" ],\n\t\tallowedHeaders: [ \"Authorization\" ],\n\t\tcredentials: true\n\t}\n} );\n\napp.use( morgan( \"tiny\" ) );\napp.use( cookieParser() );\napp.use( express.json() );\napp.use( cors( { credentials: true, origin: \"http://localhost:5173\" } ) );\napp.use( deserializeUser( prisma ) );\n\nconst literatureNameSpace = io.of( \"/literature\" );\n\nliteratureNameSpace.on( \"connection\", socket => {\n\tconsole.log( \"New Client Connected!\" );\n\tconsole.log( `Socket: ${ socket.id }` );\n\n\tsocket.emit( \"welcome\", { message: \"Welcome to Literature!\" } );\n\n\tsocket.on( \"disconnect\", () => {\n\t\tconsole.log( \"Client Disconnected!\" );\n\t\tconsole.log( `Socket: ${ socket.id }` );\n\t} );\n} );\n\nconst litGamePublisher = new Publisher<IEnhancedLitGame>( literatureNameSpace );\n\napp.get( \"/api/health\", async ( _req, res ) => {\n\treturn res.send( { healthy: true } );\n} );\n\napp.get( \"/api/me\", requireUser( prisma ), handleGetLoggedInUser() );\n\napp.delete( \"/api/auth/logout\", requireUser( prisma ), handleLogout() );\n\napp.get( \"/api/auth/callback/google\", handleAuthCallback( prisma ) );\n\napp.use(\n\t\"/api/literature\",\n\t[ requireUser( prisma ), literatureExpressHandler( { prisma, litGamePublisher } ) ]\n);\n\nserver.listen( port, () => {\n\tconsole.log( `Server started on port ${ port }` );\n} );"],"names":[],"sourceRoot":""}